@page "/vote"
@using RangeVote.Common
@inject HttpClient Http


<h1>Trip Vote</h1>

<p>Give your first choice a 9.9 and your last choice 0.  Score all others as you see fit.</p>
<p>@message</p>

@if (trips == null)
{
<p><em>Loading...</em></p>
}
else
{
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Score</th>
        </tr>
    </thead>
    <tfoot>
        <button class="btn btn-primary" onclick="@(e => SaveScores())">Save</button>
    </tfoot>
    <tbody>
        @foreach (var trip in trips.OrderByDescending(t => t.Score))
        {
            <tr>
                <td>@trip.Name</td>
                <td><button class="btn btn-primary" onclick="@(e => DecrementScore(@trip.Name))">-</button> <button class="btn" onclick="@(e => DecrementScorePt(@trip.Name))">-</button> @trip.Score.ToString("N1") <button class="btn" onclick="@(e => IncrementScorePt(@trip.Name))">+</button> <button class="btn btn-primary" onclick="@(e => IncrementScore(@trip.Name))">+</button></td>
            </tr>
        }
    </tbody>
</table>
<p>@message</p>
}

@functions {
    Candidate[] trips;
    String message;

    protected override async Task OnInitAsync()
    {
        trips = (await Http.GetJsonAsync<Ballot>("/api/candidate/f2cf5956-4ca0-485e-a7f7-27fa4897a4db")).Candidates;
    }

    void IncrementScore(String name)
    {
        var trip = trips.Where(t => t.Name == name).FirstOrDefault();
        if (trip != null)
        {
            if (trip.Score < 9)
            {
                trip.Score++;
            }
        }
    }

    void IncrementScorePt(String name)
    {
        var trip = trips.Where(t => t.Name == name).FirstOrDefault();
        if (trip != null)
        {
            if (trip.Score < 9.8)
            {
                trip.Score += .1;
            }
        }
    }

    void DecrementScore(String name)
    {
        var trip = trips.Where(t => t.Name == name).FirstOrDefault();
        if (trip != null)
        {
            if (trip.Score > 0)
            {
                trip.Score--;
            }
        }
    }

    void DecrementScorePt(String name)
    {
        var trip = trips.Where(t => t.Name == name).FirstOrDefault();
        if (trip != null)
        {
            if (trip.Score > 0)
            {
                trip.Score -= .1;
            }
        }
    }

    async Task SaveScores()
    {
        {
            message = "Saving...";

            foreach (var item in trips)
            {
                message += $"{item.Name}: {item.Score}";
            }
            await Http.SendJsonAsync(HttpMethod.Put, "/api/candidate/", new Ballot { Id= Guid.Parse("f2cf5956-4ca0-485e-a7f7-27fa4897a4db"), Candidates = trips});
            message += "OK";
        }
    }
}